{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Backfila","text":"<p>Backfila is a service that manages backfill state, calling into other services to do batched work.</p> <p>Note: some instructions here are out of date</p>"},{"location":"#hermit","title":"Hermit","text":"<p>Hermit is used to manage build dependencies like local Java and Gradle versions.</p> <p>Install Hermit shell hooks or run the following manually.</p> <pre><code>$ . ./bin/activate-hermit\n</code></pre>"},{"location":"#building","title":"Building","text":"<p>Build backfila:</p> <pre><code>$ gradle clean shadowJar\n</code></pre>"},{"location":"#run-the-service","title":"Run the Service","text":""},{"location":"#run-the-misk-web-build","title":"Run the Misk-Web Build","text":"<p>In order to ensure the web UI is built and able to be served by the service, run the following command:</p> <pre><code>$ npm install -g @misk/cli &amp;&amp; miskweb ci-build -e\n</code></pre>"},{"location":"#from-the-command-line","title":"From the command line","text":"<pre><code>$ java -jar service/build/libs/service.jar\n</code></pre>"},{"location":"#from-intellij","title":"From IntelliJ","text":"<p>Right-click on <code>BackfilaDevelopmentService.kt</code> and select <code>Run</code></p>"},{"location":"#from-docker","title":"From Docker","text":""},{"location":"#building_1","title":"Building","text":"<p>Build a Docker image of backfila:</p> <pre><code>$ docker build -t backfila-0.0.1\n</code></pre>"},{"location":"#running-locally","title":"Running locally","text":"<p>Visit Docker for Mac to install Docker on a Mac for testing.</p> <p>Run backfila in Docker locally: <pre><code>$ docker run -p 8080:8080 backfila-0.0.1\n</code></pre></p> <p>Visit the UI at http://localhost:8080/</p>"},{"location":"#client","title":"Client","text":"<p>The backfila client must be installed in your services to expose their backfill code. It also provides the batching mechanism and templates for common types of backfills.</p>"},{"location":"#connectors","title":"Connectors","text":"<p>Connectors can be installed to provide a way to connect to your services. The included default connectors are HTTPS and Envoy. Add custom connectors using Guice map binding.</p>"},{"location":"#gradle","title":"Gradle","text":"<pre><code>implementation(\"app.cash.backfila:backfila-client:0.1.0\")\nimplementation(\"app.cash.backfila:backfila-service-lib:0.1.0\")\n</code></pre>"},{"location":"#license","title":"License","text":"<pre><code>Copyright 2019 Square, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>"},{"location":"changelog/","title":"Change Log","text":""},{"location":"changelog/#version-011-2020-03-27","title":"Version 0.1.1 (2020-03-27)","text":"<ul> <li>Paginated backfills page.</li> <li>View logs link.</li> </ul>"},{"location":"changelog/#version-010-2019-09-01","title":"Version 0.1.0 (2019-09-01)","text":"<p>Initial release.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>If you would like to contribute code to this project you can do so through GitHub by forking the repository and sending a pull request.</p> <p>When submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible.</p> <p>Before your code can be accepted into the project you must also sign the Individual Contributor License Agreement (CLA).</p>"},{"location":"releasing/","title":"Releasing","text":""},{"location":"releasing/#prerequisite-sonatype-maven-central-account","title":"Prerequisite: Sonatype (Maven Central) Account","text":"<p>Create an account on the Sonatype issues site. Ask an existing publisher to open an issue requesting publishing permissions for <code>backfila</code> projects.</p>"},{"location":"releasing/#prerequisite-gpg-keys","title":"Prerequisite: GPG Keys","text":"<p>Generate a GPG key (RSA, 4096 bit, 3650 day) expiry, or use an existing one. You should leave the password empty for this key.</p> <pre><code>$ gpg --full-generate-key \n</code></pre> <p>Upload the GPG keys to public servers:</p> <pre><code>$ gpg --list-keys --keyid-format LONG\n/Users/johnbarber/.gnupg/pubring.kbx\n------------------------------\npub   rsa4096/XXXXXXXXXXXXXXXX 2019-07-16 [SC] [expires: 2029-07-13]\n      YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\nuid           [ultimate] John Barber &lt;jbarber@cash.app&gt;\nsub   rsa4096/ZZZZZZZZZZZZZZZZ 2019-07-16 [E] [expires: 2029-07-13]\n\n$ gpg --send-keys --keyserver keyserver.ubuntu.com XXXXXXXXXXXXXXXX\n</code></pre>"},{"location":"releasing/#prerequisite-gradle-properties","title":"Prerequisite: Gradle Properties","text":"<p>Define publishing properties in <code>~/.gradle/gradle.properties</code>:</p> <pre><code>signing.keyId=1A2345F8\nsigning.password=\nsigning.secretKeyRingFile=/Users/jwilson/.gnupg/secring.gpg\n</code></pre> <p><code>signing.keyId</code> is the GPG key\u2019s ID. Get it with this:</p> <pre><code>$ gpg --list-keys --keyid-format SHORT\n</code></pre> <p><code>signing.password</code> is the password for this key. This might be empty!</p> <p><code>signing.secretKeyRingFile</code> is the absolute path for <code>secring.gpg</code>. You may need to export this file manually with the following command where <code>XXXXXXXX</code> is the <code>keyId</code> above:</p> <pre><code>$ gpg --keyring secring.gpg --export-secret-key XXXXXXXX &gt; ~/.gnupg/secring.gpg\n</code></pre>"},{"location":"releasing/#cutting-a-release","title":"Cutting a Release","text":"<ol> <li> <p>Update <code>CHANGELOG.md</code>.</p> </li> <li> <p>Set versions:</p> <pre><code>export RELEASE_VERSION=X.Y.Z\nexport NEXT_VERSION=X.Y.Z-SNAPSHOT\n</code></pre> </li> <li> <p>Set environment variables with your Sonatype credentials.</p> <pre><code>export SONATYPE_NEXUS_USERNAME=johnbarber\nexport SONATYPE_NEXUS_PASSWORD=`pbpaste`\n</code></pre> </li> <li> <p>Update, build, and upload:</p> <pre><code>sed -i \"\" \\\n  \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\\n  gradle.properties\nsed -i \"\" \\\n  \"s/\\\"backfila:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"backfila:\\1:$RELEASE_VERSION\\\"/g\" \\\n  `find . -name \"README.md\"`\nmiskweb ci-build -e\ngradle clean uploadArchives\n</code></pre> </li> <li> <p>Visit Sonatype Nexus to promote (close then release) the artifact. Or drop it    if there is a problem!</p> </li> <li> <p>Tag the release, prepare for the next one, and push to GitHub.</p> <pre><code>git commit -am \"Prepare for release $RELEASE_VERSION.\"\ngit tag -a backfila-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\"\nsed -i \"\" \\\n  \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\\n  gradle.properties\ngit commit -am \"Prepare next development version.\"\ngit push &amp;&amp; git push --tags\n</code></pre> </li> </ol>"}]}